extends Control

@onready var end_points_dropdown = $PanelContainer/MainVertical/AvailableOptions/Choices/EndPointsDropdown
@onready var max_points_label = $PanelContainer/MainVertical/AvailableOptions/Options/MaxPoints
@onready var max_points_dropdown = $PanelContainer/MainVertical/AvailableOptions/Choices/MaxPointsDropdown
@onready var rounds_label = $PanelContainer/MainVertical/AvailableOptions/Options/Rounds
@onready var round_dropdown = $PanelContainer/MainVertical/AvailableOptions/Choices/RoundsDropdown
@onready var private_check_button = $PanelContainer/MainVertical/PublicPrivate/PrivateCheckButton
@onready var create_button = $PanelContainer/MainVertical/Button

@onready var client: SocketIO = $"../SocketIO"  # N≈ìud SocketIO d√©j√† connect√© dans la sc√®ne

func _ready():
	# V√©rifie que le client SocketIO existe et est connect√©
	if client == null:
		print("‚ùå Le client SocketIO n'a pas pu √™tre instanci√©.")
		return
	
	# Connexion manuelle du signal pour la cr√©ation de lobby
	create_button.pressed.connect(Callable(self, "_on_create_lobby"))

	# Connecte les √©v√©nements de connexion et de d√©connexion de SocketIO
	client.connect("connected", Callable(self, "_on_socket_connected"))
	client.connect("disconnected", Callable(self, "_on_socket_disconnected"))

# Fonction pour g√©rer la connexion r√©ussie

# Fonction pour cr√©er un lobby
func _on_create_lobby():
	# Cr√©er le message avec les informations minimales
	var message = {
		"event": "create-room",
		"username": "Player1",  # Laisse cette valeur ou r√©cup√®re un vrai nom de joueur
		"isPrivate": private_check_button.pressed  # Utilise l'√©tat du bouton pour d√©terminer la valeur de "isPrivate"
	}

	# Convertir le message en JSON et l'envoyer via Socket.IO
	client.emit("create-room", JSON.stringify(message))
	print("üì§ Demande de cr√©ation de salle envoy√©e :", JSON.stringify(message))

	# Changer de sc√®ne apr√®s avoir envoy√© la demande
	# Remplacer par la sc√®ne suivante une fois que tu l'auras d√©finie
	get_tree().change_scene_to_file("res://scenes/gameboard.tscn")

# Fonction appel√©e lorsque la connexion est pr√™te (optionnel)
func _on_socket_ready():
	print("‚úÖ La connexion Socket.IO est pr√™te et pr√™te √† recevoir des messages.")

# Fonction de retour √† la sc√®ne pr√©c√©dente (exemple de bouton "Retour")
func _on_return_pressed():
	get_tree().change_scene_to_file("res://scenes/gameboard.tscn")  # Change la sc√®ne
